#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include "keys_ru.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    require-prior-idle-ms = <125>;
};

&sk {
    quick-release;
    release-after-ms = <1000>;
};

&sl { release-after-ms = <1000>; };

&lt {
    tapping-term-ms = <200>;
    require-prior-idle-ms = <50>;
};

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <240>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <240>;
            bindings = <&kp>, <&kp>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 33 34 35>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32>;
            hold-trigger-on-release;
        };

        tp: tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        swap_win: swapper_win {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER_WIN";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;

            ignored-key-positions = <13 15 16 17 18 19>;
        };

        swap_tab: swapper_tab {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER_TAB";
            #binding-cells = <0>;
            bindings = <&kt LCTRL>, <&kp TAB>, <&kt LCTRL>;

            ignored-key-positions = <13 15 16 17 18 19>;
        };

        lt_sym_ru: lt_sym_ru {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_SYM_RU";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&m_layer_sym>, <&m_to_en>;
        };

        lt_num: lt_num {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_NUM";
            bindings = <&m_mo_num>, <&m_tog_num>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <50>;
            flavor = "tap-preferred";
        };

        lt_num_ru: lt_num_ru {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_NUM_RU";
            bindings = <&m_mo_num_ru>, <&m_tog_num_ru>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <50>;
            flavor = "tap-preferred";
        };

        lt_esc: lt_esc {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_ESC";
            bindings = <&mo>, <&m_esc>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <50>;
            flavor = "tap-preferred";
        };

        tp_warpd_hint: tp_warpd_hint {
            compatible = "zmk,behavior-hold-tap";
            label = "TP_WARPD_HINT";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&m_warpd_hint>, <&kp>;
        };

        tt: tt {
            compatible = "zmk,behavior-hold-tap";
            label = "TT";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&tog>, <&kp>;
        };

        hrm_l: hrm_l {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_L";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <6 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        };

        hrm_r: hrm_r {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_R";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <17 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };

        st: st {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            label = "ST";
            bindings = <&ssk>, <&kp>;
        };

        lt_sup: lt_sup {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-key-positions = <7 16 17 18 19 6>;
            hold-trigger-on-release;
            label = "LT_SUP";
            bindings = <&mo>, <&kp>;
        };

        ssk: ssk {
            compatible = "zmk,behavior-sticky-key";
            label = "SSK";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <60000>;
            quick-release;
            ignore-modifiers;
        };

        hlt: hlt {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            label = "HLT";
            bindings = <&mo>, <&kp>;
        };

        mo_lshift: mo_lshift {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_LSHIFT";
            bindings = <&mo>, <&mm_lshift>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <50>;
            flavor = "tap-preferred";
        };

        lt_warpd_hint: lt_warpd_hint {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_WARPD_HINT";
            bindings = <&mo>, <&m_warpd_hint>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <50>;
            flavor = "tap-preferred";
        };

        lt_sym: lt_sym {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_SYM";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&m_to_ru>;
        };

        mo_sym_ssk: mo_sym_ssk {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_SYM_SSK";
            bindings = <&m_layer_sym>, <&mm_lshift>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <50>;
            flavor = "tap-preferred";
        };

        mo_to_ru: mo_to_ru {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TO_RU";
            bindings = <&mo>, <&m_to_ru>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <50>;
            flavor = "tap-preferred";
        };

        mo_to_en: mo_to_en {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TO_EN";
            bindings = <&mo>, <&m_to_en>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <50>;
            flavor = "tap-preferred";
        };

        mm_lshift: mm_lshift {
            compatible = "zmk,behavior-mod-morph";
            label = "MM_LSHIFT";
            bindings = <&ssk LSHFT>, <&m_clear_mod>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        hlt_sym: hlt_sym {
            compatible = "zmk,behavior-hold-tap";
            label = "HLT_SYM";
            bindings = <&m_layer_sym>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            require-prior-idle-ms = <50>;
            flavor = "tap-preferred";
        };

        mo_sk: mo_sk {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            label = "MO_SK";
            bindings = <&mo>, <&sk>;
        };
    };

    macros {
        m_en: m_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp CAPS>;
            label = "M_EN";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_ru: m_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(CAPS)>;
            label = "M_RU";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_to_en: macro_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &m_en>;
            label = "MACRO_EN";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_to_ru: macro_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &m_ru>;
            label = "MACRO_RU";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_kp_en: kp_en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&m_en &macro_param_1to1 &kp MACRO_PLACEHOLDER &m_ru>;
            label = "X KP_EN";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_comma: m_comma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COMMA &kp SPACE>;
            label = "M_COMMA";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_comma_ru: m_comma_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(SLASH) &kp SPACE>;
            label = "M_COMMA_RU";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_dot: m_dot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp SPACE &ssk LSHFT>;
            label = "M_DOT";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_dot_ru: m_dot_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SLASH &kp SPACE &ssk LSHFT>;
            label = "M_DOT_RU";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_layer_sym: m_layer_sym {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&m_en>,
                <&macro_press>,
                <&mo 0 &mo 8>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 8 &mo 0>,
                <&macro_tap>,
                <&m_ru>;

            label = "M_LAYER_SYM";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_layer_cmd: macro_layer_cmd {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&m_en>,
                <&macro_press>,
                <&mo 0 &mo 21>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 21 &mo 0>,
                <&macro_tap>,
                <&m_ru>;

            label = "X MACRO_LAYER_CMD";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_warpd_hint: macro_warpd_hint {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F17 &tog 11>;
            label = "MACRO_WARPD_HINT";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_warpd_esc: macro_warpd_esc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &tog 11>;
            label = "MACRO_WARPD_ESC";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_warpd_click: macro_warpd_click {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp ESC &mkp LCLK &tog 11>;
            label = "MACRO_WARPD_CLICK";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_warpd_normal: macro_warpd_normal {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F18 &tog 11>;
            label = "X MACRO_WARPD_NORMAL";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_caps_word: macro_caps_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHFT &caps_word>;
            label = "MACRO_CAPS_WORD";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_fn: macro_fn {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&tog 9 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "MACRO_FN";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_tog_num: tog_multi {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&tog 6 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TOG_NUM";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_tog_num_ru: tog_multi_ru {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&tog 6 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TOG_NUM_RU";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_mo_num: mo_num {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog 6>,
                <&macro_press>,
                <&mo 2>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 2>;

            label = "MO_NUM";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_mo_num_ru: mo_num_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&tog 7>,
                <&macro_press>,
                <&mo 3>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 3>;

            label = "MO_NUM_RU";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_esc: m_esc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp ESC>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp ESC &kp LSHFT &kp LCTRL &kp LALT &kp LGUI>;

            label = "M_ESC";
        };

        m_to_en_alt: m_to_en_alt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &m_en>, <&macro_press>, <&kp D>;

            label = "M_TO_EN_ALT";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        m_to_ru_alt: m_to_ru_alt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &m_ru>, <&macro_press>, <&kp D>;

            label = "M_TO_RU_ALT";
            wait-ms = <0>;
            tap-ms = <0>;
        };

        nop: m_nop {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "M_NOP";
        };

        m_release: m_release {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>;

            label = "M_RELEASE";
        };

        m_clear_mod: m_clear_mod {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp 0>;
            label = "M_CLEAR_MOD";
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            bindings = <&kp ESC>;
            key-positions = <1 2>;
            timeout-ms = <30>;
            require-prior-idle-ms = <200>;
        };

        combo_ret {
            bindings = <&kp RET>;
            key-positions = <>;
        };

        combo_bs {
            bindings = <&kp BACKSPACE>;
            key-positions = <>;
        };

        combo_spc {
            bindings = <&kp SPACE>;
            key-positions = <>;
        };

        combo_caps_word {
            bindings = <&caps_word>;
            key-positions = <>;
        };

        combo_mouse_l {
            bindings = <&tog 10>;
            key-positions = <>;
            layers = <2 3 0 1>;
        };

        combo_mouse_r {
            bindings = <&tog 10>;
            key-positions = <>;
            layers = <2 3 0 1>;
        };

        combo_bootloader_l {
            bindings = <&bootloader>;
            key-positions = <>;
        };

        combo_bootloader_r {
            bindings = <&bootloader>;
            key-positions = <>;
        };

        c_fn {
            bindings = <&mo 9>;
            key-positions = <>;
            layers = <0 1>;
        };

        c_bootloader_l {
            bindings = <&bootloader>;
            key-positions = <0 10 20>;
        };

        c_bootloader_r {
            bindings = <&bootloader>;
            key-positions = <9 19 29>;
        };

        c_l_click {
            bindings = <&mkp LCLK>;
            key-positions = <>;
        };

        c_scroll_up {
            bindings = <&msc SCRL_UP>;
            key-positions = <>;
        };

        m_scroll_down {
            bindings = <&msc SCRL_DOWN>;
            key-positions = <>;
        };

        m_lclick_r {
            bindings = <&mkp LCLK>;
            key-positions = <>;
        };

        c_scroll_up_r {
            bindings = <&msc SCRL_UP>;
            key-positions = <>;
        };

        c_scroll_down_r {
            bindings = <&msc SCRL_DOWN>;
            key-positions = <>;
        };

        c_to_ru {
            bindings = <&m_to_ru>;
            key-positions = <12 13>;
            layers = <0>;
            timeout-ms = <30>;
            require-prior-idle-ms = <200>;
        };

        c_to_en {
            bindings = <&m_to_en>;
            key-positions = <12 13>;
            layers = <1>;
            timeout-ms = <30>;
            require-prior-idle-ms = <200>;
        };

        c_ru_alt {
            bindings = <&tog 0>;
            key-positions = <32 31 30>;
        };

        ret {
            bindings = <&kp RET>;
            key-positions = <17 18>;
            timeout-ms = <30>;
            require-prior-idle-ms = <200>;
        };

        ssk_shift_l {
            bindings = <&ssk LSHFT>;
            key-positions = <3 2>;
            timeout-ms = <20>;
            require-prior-idle-ms = <200>;
            layers = <0 1>;
        };

        ssk_shift {
            bindings = <&ssk LSHFT>;
            key-positions = <16 17>;
            timeout-ms = <30>;
            require-prior-idle-ms = <200>;
            layers = <0 1>;
        };

        space {
            bindings = <&kp SPACE>;
            key-positions = <7 8>;
            timeout-ms = <30>;
            require-prior-idle-ms = <200>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <16 15>;
            timeout-ms = <30>;
            require-prior-idle-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            // -----------------------------------------------------------------------------------------
            // | TAB  |  Q  |  W  |  E  |  R  |    T    |   |  Y  |  U   |  I  |  O  |  P  | ESC |
            // | CTRL |  A  |  S  |  D  |  F  |    G    |   |  H  |  J   |  K  |  L  |  ;  |  LWR/'   |
            // | SHFT |  Z  |  X  |  C  |  V  |    B    |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | ALT/ENT |   | HYPER/SPC | BKSP  | RSE |

            bindings = <
  &kp Q     &kp W     &kp E     &kp R     &kp T                               &kp Y        &kp U      &kp I      &kp O    &kp P
  &hlt 9 A  &hlt 8 S  &hlt 6 D  &hlt 4 F  &kp G                               &kp H        &hlt 21 J  &kp K      &kp L    &kp SEMI
  &kp Z     &kp X     &kp C     &kp V     &kp B                               &kp N        &kp M      &kp COMMA  &kp DOT  &kp FSLH
                                &nop      &lt 2 SPACE  &kp ESC    &lt 10 RET  &lt 2 SPACE  &none
            >;

            display-name = "EN";
        };

        ru {
            bindings = <
  &trans    &trans        &trans    &trans    &trans                              &trans       &trans      &trans  &tp LBKT O  &tp LBKT P
  &hlt 9 A  &hlt_sym 0 S  &hlt 7 D  &hlt 5 F  &trans                              &trans       &hlt 22 J   &trans  &trans      &tp SQT SEMI
  &trans    &trans        &trans    &trans    &trans                              &trans       &tp RBKT M  &trans  &trans      &trans
                                    &nop      &lt 3 SPACE  &kp ESC    &lt 10 RET  &lt 3 SPACE  &none
            >;

            display-name = "RU";
        };

        nav {
            bindings = <
  &m_warpd_hint  &kp BACKSPACE  &kp ESCAPE   &kp RET      &key_repeat                      &kp INS        &kp HOME  &kp PG_UP  &kp PG_DN  &kp END
  &sk LEFT_GUI   &sk LALT       &sk LCTRL    &sk LSHFT    &swap_win                        &kp TAB        &kp LEFT  &kp UP     &kp DOWN   &kp RIGHT
  &kp LC(Z)      &lt 6 LC(X)    &lt 9 LC(C)  &lt 4 LC(V)  &swap_tab                        &kp BACKSPACE  &kp RET   &kp COMMA  &kp DOT    &kp DEL
                                             &nop         &kp SPACE    &kp ESC    &kp RET  &kp SPACE      &nop
            >;

            display-name = "NAV";
        };

        nav_ru {
            bindings = <
  &m_warpd_hint  &kp BACKSPACE  &kp ESCAPE   &kp RET      &key_repeat                      &kp INS        &kp HOME  &kp PG_UP     &kp PG_DN   &kp END
  &sk LEFT_GUI   &sk LALT       &sk LCTRL    &sk LSHFT    &swap_win                        &kp TAB        &kp LEFT  &kp UP        &kp DOWN    &kp RIGHT
  &kp LC(Z)      &lt 7 LC(X)    &lt 9 LC(C)  &lt 5 LC(V)  &swap_tab                        &kp BACKSPACE  &kp RET   &kp RU_COMMA  &kp RU_DOT  &kp DEL
                                             &nop         &kp SPACE    &kp ESC    &kp RET  &kp SPACE      &nop
            >;

            display-name = "NAV RU";
        };

        alt {
            bindings = <
  &none     &m_warpd_hint  &kp ESC    &none  &none                             &m_caps_word  &kp MINUS      &kp DQT   &kp COLON  &kp SEMI
  &kp LGUI  &kp LALT       &kp LCTRL  &none  &none                             &ssk LSHFT    &kp BACKSPACE  &kp RET   &m_to_ru   &kp ESC
  &none     &none          &none      &none  &none                             &kp QMARK     &kp EXCL       &m_comma  &m_dot     &kp SLASH
                                      &nop   &lt 12 SPACE  &kp ESC    &kp RET  &kp SPACE     &nop
            >;

            display-name = "ALT";
        };

        alt_ru {
            bindings = <
  &none     &m_warpd_hint  &kp ESC    &none  &none                             &m_caps_word     &kp RU_MINUS   &kp RU_DQT   &kp RU_COLON  &kp RU_SEMICOLON
  &kp LGUI  &kp LALT       &kp LCTRL  &none  &none                             &ssk LSHFT       &kp BACKSPACE  &kp RET      &m_to_en      &kp ESC
  &none     &none          &none      &none  &none                             &kp RU_QUESTION  &kp EXCL       &m_comma_ru  &m_dot_ru     &kp RU_SLASH
                                      &nop   &lt 13 SPACE  &kp ESC    &kp RET  &kp SPACE        &nop
            >;

            display-name = "ALT RU";
        };

        num {
            bindings = <
  &none     &none     &none  &kp BACKSPACE  &none                                &kp SLASH   &kp N9  &kp N0  &kp MINUS  &kp EQUAL
  &kp LGUI  &kp LALT  &none  &kp LSHIFT     &none                                &kp PERIOD  &kp N5  &kp N6  &kp N7     &kp N8
  &none     &none     &none  &none          &none                                &kp COMMA   &kp N1  &kp N2  &kp N3     &kp N4
                             &nop           &tp LCTRL SPACE  &kp ESC    &kp RET  &kp SPACE   &nop
            >;

            display-name = "NUM";
        };

        num_ru {
            bindings = <
  &none     &none     &none  &kp BACKSPACE  &none                                &kp LS(BACKSLASH)  &kp N9  &kp N0  &kp MINUS  &kp EQUAL
  &kp LGUI  &kp LALT  &none  &kp LSHFT      &none                                &kp SLASH          &kp N5  &kp N6  &kp N7     &kp N8
  &none     &none     &none  &none          &none                                &kp LS(SLASH)      &kp N1  &kp N2  &kp N3     &kp N4
                             &nop           &tp LCTRL SPACE  &kp ESC    &kp RET  &kp SPACE          &nop
            >;

            display-name = "NUM RU";
        };

        sym {
            display-name = "SYM";
            bindings = <
  &none     &none  &none      &none      &none                               &kp GRAVE      &kp LBKT        &kp RBKT     &kp SQT   &kp PERCENT
  &kp LGUI  &none  &kp LCTRL  &kp LSHFT  &none                               &kp CARET      &kp DOLLAR      &kp AT_SIGN  &kp HASH  &kp AMPERSAND
  &none     &none  &none      &none      &none                               &kp BACKSLASH  &kp UNDERSCORE  &kp LT       &kp GT    &kp QUESTION
                              &nop       &tp LALT SPACE  &kp ESC    &kp RET  &kp SPACE      &nop
            >;
        };

        fn {
            bindings = <
  &none  &none     &none      &none      &none                         &none      &kp F9  &kp F10  &kp F11  &kp F12
  &none  &sk LALT  &sk LCTRL  &sk LSHFT  &none                         &kp RET    &kp F5  &kp F6   &kp F7   &kp F8
  &none  &none     &none      &none      &none                         &none      &kp F1  &kp F2   &kp F3   &kp F4
                              &none      &kp LGUI  &kp ESC    &kp RET  &kp SPACE  &nop
            >;

            display-name = "FN";
        };

        mouse {
            bindings = <
  &none          &none      &none      &none      &trans                           &trans  &msc SCRL_LEFT     &msc SCRL_UP       &msc SCRL_DOWN    &msc SCRL_RIGHT
  &m_warpd_hint  &mkp MB3   &mkp RCLK  &mkp LCLK  &trans                           &trans  &mmv MOVE_LEFT     &mmv MOVE_UP       &mmv MOVE_DOWN    &mmv MOVE_RIGHT
  &kp LALT       &kp LCTRL  &kp LSHFT  &mkp LCLK  &trans                           &trans  &mmv MOVE_X(-200)  &mmv MOVE_Y(-200)  &mmv MOVE_Y(200)  &mmv MOVE_X(200)
                                       &nop       &m_warpd_hint  &kp ESC    &none  &none   &nop
            >;

            display-name = "MOUSE";
        };

        hint {
            bindings = <
  &kp Q  &kp W  &kp E  &kp R      &kp T                                  &kp Y  &kp U  &kp I      &kp O    &kp P
  &kp A  &kp S  &kp D  &hlt 14 F  &kp G                                  &kp H  &kp J  &kp K      &kp L    &kp SEMI
  &kp Z  &kp X  &kp C  &kp V      &kp B                                  &kp N  &kp M  &kp COMMA  &kp DOT  &kp SLASH
                       &nop       &none  &m_warpd_esc    &m_warpd_click  &none  &nop
            >;

            display-name = "HINT";
        };

        nav2 {
            bindings = <
  &none     &none     &none      &none      &none                          &kp INS        &kp HOME  &kp PG_UP  &kp PG_DN  &kp END
  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                          &kp TAB        &kp LEFT  &kp UP     &kp DOWN   &kp RIGHT
  &none     &none     &none      &none      &none                          &kp BACKSPACE  &kp RET   &kp COMMA  &kp DOT    &kp DEL
                                 &none      &kp SPACE  &kp ESC    &kp RET  &kp SPACE      &none
            >;

            label = "NAV2";
        };

        nav2_ru {
            bindings = <
  &none     &none     &none      &none      &none                          &kp INS        &kp HOME  &kp PG_UP     &kp PG_DN   &kp END
  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none                          &kp TAB        &kp LEFT  &kp UP        &kp DOWN    &kp RIGHT
  &none     &none     &none      &none      &none                          &kp BACKSPACE  &kp RET   &kp RU_COMMA  &kp RU_DOT  &kp DEL
                                 &none      &kp SPACE  &kp ESC    &kp RET  &kp SPACE      &none
            >;

            label = "NAV2 RU";
        };

        hint2 {
            bindings = <
  &none  &m_warpd_click  &m_warpd_esc  &none  &none                                  &none  &none  &none           &none  &none
  &none  &none           &none         &none  &none                                  &none  &none  &m_warpd_click  &none  &m_warpd_esc
  &none  &none           &none         &none  &none                                  &none  &none  &none           &none  &none
                                       &none  &none  &m_warpd_esc    &m_warpd_click  &none  &none
            >;

            label = "HINT 2";
        };

        sys {
            bindings = <
  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
                          &nop    &trans  &trans    &trans  &trans  &nop
            >;

            display-name = "SYS";
        };

        ru_alt {
            bindings = <
  &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_DE      &kp RU_CYRILLIC_EM     &kp RU_CYRILLIC_KA      &kp RU_CYRILLIC_CHE                         &kp RU_CYRILLIC_TSE    &kp RU_CYRILLIC_SHORT_I                          &ht RU_CYRILLIC_E RU_CYRILLIC_YERU  &ht RU_CYRILLIC_IO RU_CYRILLIC_YA  &kp RU_CYRILLIC_HA
  &kp RU_CYRILLIC_ER   &hlt 21 RU_CYRILLIC_ES  &hlt 5 RU_CYRILLIC_EN  &hlt 21 RU_CYRILLIC_TE  &kp RU_CYRILLIC_GHE                         &kp RU_CYRILLIC_PE     &kp RU_CYRILLIC_A                                &kp RU_CYRILLIC_O                   &kp RU_CYRILLIC_IE                 &kp RU_CYRILLIC_I
  &kp RU_CYRILLIC_ZE   &kp RU_CYRILLIC_BE      &kp RU_CYRILLIC_EL     &kp RU_CYRILLIC_VE      &kp RU_CYRILLIC_SHA                         &kp RU_CYRILLIC_SHCHA  &ht RU_CYRILLIC_HARD_SIGN RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_U                   &kp RU_CYRILLIC_YU                 &kp RU_CYRILLIC_EF
                                                                      &nop                    &lt 3 SPACE          &kp ESC    &lt 10 RET  &lt 3 SPACE            &nop
            >;

            display-name = "RU ALT";
        };

        x_mouse_l {
            bindings = <
  &msc SCRL_LEFT     &msc SCRL_DOWN    &msc SCRL_UP       &msc SCRL_RIGHT   &none                            &none  &none      &none      &none      &none
  &mmv MOVE_LEFT     &mmv MOVE_DOWN    &mmv MOVE_UP       &mmv MOVE_RIGHT   &none                            &none  &mkp LCLK  &mkp RCLK  &mkp MB3   &m_warpd_hint
  &mmv MOVE_X(-200)  &mmv MOVE_Y(200)  &mmv MOVE_Y(-200)  &mmv MOVE_X(200)  &none                            &none  &mkp LCLK  &kp LSHFT  &kp LCTRL  &kp LALT
                                                          &nop              &m_warpd_hint  &kp ESC    &none  &none  &nop
            >;

            display-name = "X MOUSE L";
        };

        x_mouse_alt {
            bindings = <
  &msc SCRL_LEFT     &msc SCRL_DOWN     &msc SCRL_UP  &msc SCRL_RIGHT  &trans                               &trans            &msc SCRL_LEFT  &msc SCRL_UP  &msc SCRL_DOWN    &msc SCRL_RIGHT
  &mmv MOVE_X(-100)  &mmv MOVE_X(-600)  &mkp RCLK     &mkp LCLK        &trans                               &trans            &mkp LCLK       &mkp RCLK     &mmv MOVE_X(600)  &mmv MOVE_X(100)
  &trans             &kp LALT           &kp LCTRL     &kp LSHFT        &trans                               &trans            &kp RSHFT       &kp RCTRL     &kp RALT          &trans
                                                      &nop             &mmv MOVE_Y(-600)  &tog 27    &none  &mmv MOVE_Y(600)  &nop
            >;

            display-name = "X MOUSE";
        };

        x_mouse_alt_2 {
            bindings = <
  &none     &none  &none      &none      &none                     &none   &msc SCRL_LEFT  &msc SCRL_UP  &msc SCRL_DOWN  &msc SCRL_RIGHT
  &kp LALT  &none  &kp LCTRL  &kp LSHFT  &none                     &none   &mkp LCLK       &mkp RCLK     &m_warpd_hint   &mkp MB3
  &none     &none  &none      &none      &none                     &none   &mmv MOVE_LEFT  &mmv MOVE_UP  &mmv MOVE_DOWN  &mmv MOVE_RIGHT
                              &nop       &trans  &trans    &trans  &trans  &nop
            >;

            display-name = "X MOUSE ALT 2";
        };

        x_cmd {
            bindings = <
  &none  &none  &none     &none       &none                  &none  &none  &none  &none  &none
  &none  &none  &m_to_ru  &ssk LSHFT  &none                  &none  &none  &none  &none  &none
  &none  &none  &none     &none       &none                  &none  &none  &none  &none  &none
                          &nop        &none  &kp 0    &none  &none  &nop
            >;

            display-name = "X CMD";
        };

        x_cmd_ru {
            display-name = "X CMD RU";
            bindings = <
  &none  &none  &none     &none       &none                  &none  &none  &none  &none  &none
  &none  &none  &m_to_en  &ssk LSHFT  &none                  &none  &none  &none  &none  &none
  &none  &none  &none     &none       &none                  &none  &none  &none  &none  &none
                          &nop        &none  &kp 0    &none  &none  &nop
            >;
        };

        x_sym {
            bindings = <
  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LT       &kp GT          &kp GRAVE                                     &kp SQT       &kp LPAR         &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
  &kp AMPERSAND   &kp HASH         &kp AT_SIGN  &kp PIPE        &kp TILDE                                     &kp PLUS      &kp MINUS        &kp DQT                &kp COLON         &kp SEMI
  &kp PERCENT     &kp CARET        &kp DOLLAR   &kp UNDERSCORE  &kp BACKSLASH                                 &kp QUESTION  &kp EXCLAMATION  &kp COMMA              &kp DOT           &kp SLASH
                                                &nop            &kp SPACE      &kp ASTERISK    &kp BACKSPACE  &kp RET       &nop
            >;

            display-name = "X SYM";
        };

        x_sym_ru {
            bindings = <
  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp LT       &kp GT          &kp GRAVE                                     &kp SQT     &kp LPAR         &kp RIGHT_PARENTHESIS  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
  &kp AMPERSAND   &kp HASH         &kp AT_SIGN  &kp PIPE        &kp TILDE                                     &kp PLUS    &kp MINUS        &kp LS(N2)             &kp LS(N6)        &kp LS(N4)
  &kp PERCENT     &kp CARET        &kp DOLLAR   &kp UNDERSCORE  &kp BACKSLASH                                 &kp LS(N7)  &kp EXCLAMATION  &kp LS(SLASH)          &kp SLASH         &kp LS(BACKSLASH)
                                                &nop            &kp SPACE      &kp ASTERISK    &kp BACKSPACE  &kp RET     &nop
            >;

            display-name = "X SYM RU";
        };

        x_alt_alt {
            bindings = <
  &none  &none  &none  &none  &none                     &kp TILDE     &kp EQUAL        &kp DQT    &kp HASH       &kp GRAVE
  &none  &none  &none  &none  &none                     &kp PLUS      &kp MINUS        &kp COLON  &kp SEMICOLON  &kp SQT
  &none  &none  &none  &none  &none                     &kp QUESTION  &kp EXCLAMATION  &trans     &trans         &trans
                       &nop   &trans  &trans    &trans  &trans        &nop
            >;

            display-name = "X ALT ALT";
        };

        x_alt_alt_ru {
            bindings = <
  &none  &none  &none  &none  &none                     &kp GRAVE   &kp EQUAL        &kp LS(N2)     &kp LS(N3)  &kp LBKT
  &none  &none  &none  &none  &none                     &kp PLUS    &kp MINUS        &kp LS(N6)     &kp LS(N4)  &kp SQT
  &none  &none  &none  &none  &none                     &kp LS(N7)  &kp EXCLAMATION  &kp LS(SLASH)  &kp SLASH   &kp RBKT
                       &nop   &trans  &trans    &trans  &trans      &nop
            >;

            display-name = "X ALT ALT RU";
        };

        x_cmd_alt {
            bindings = <
  &none  &tog 27  &m_warpd_hint  &none      &none                       &none   &none      &m_to_ru       &none     &none
  &none  &none    &m_caps_word   &sk LSHFT  &none                       &none   &sk RSHFT  &sk RCTRL      &sk LALT  &sk LGUI
  &none  &none    &none          &none      &none                       &none   &tog 27    &m_warpd_hint  &none     &none
                                 &nop       &m_to_ru  &trans    &trans  &trans  &nop
            >;

            display-name = "X CMD ALT";
        };

        x_cmd_alt_ru {
            bindings = <
  &none  &tog 27  &m_warpd_hint  &none      &kp GRAVE                    &none   &none      &m_to_en       &none     &none
  &none  &none    &m_caps_word   &sk LSHFT  &none                        &none   &sk LSHFT  &sk LCTRL      &sk LALT  &sk LGUI
  &none  &none    &none          &none      &none                        &none   &tog 27    &m_warpd_hint  &none     &none
                                 &nop       &m_to_en   &trans    &trans  &trans  &nop
            >;

            display-name = "X CMD ALT RU";
        };

        x_num_alt {
            bindings = <
  &kp LS(N1)   &kp LS(N2)    &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                                         &kp LS(N6)     &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp LS(N0)
  &kp N7       &kp N5        &kp N3      &kp N1      &kp N9                                             &kp N8         &kp N0      &kp N2      &kp N4      &kp N6
  &kp PERCENT  &kp ASTERISK  &kp MINUS   &kp PLUS    &kp LT                                             &kp GT         &kp EQUAL   &kp COMMA   &kp DOT     &kp SLASH
                                         &nop        &lt_num 0 SPACE  &m_tog_num ESC    &m_tog_num RET  &kp BACKSPACE  &nop
            >;

            display-name = "X NUM ALT";
        };

        x_num_alt_ru {
            bindings = <
  &kp LS(N1)   &kp LS(N2)    &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                                                  &kp LS(N6)     &kp LS(N7)  &kp LS(N8)     &kp LS(N9)  &kp LS(N0)
  &kp N7       &kp N5        &kp N3      &kp N1      &kp N9                                                      &kp N8         &kp N0      &kp N2         &kp N4      &kp N6
  &kp PERCENT  &kp ASTERISK  &kp MINUS   &kp PLUS    &m_kp_en LT                                                 &m_kp_en GT    &kp EQUAL   &kp LS(SLASH)  &kp SLASH   &kp LS(BACKSLASH)
                                         &nop        &lt_num_ru 0 SPACE  &m_tog_num_ru ESC    &m_tog_num_ru RET  &kp BACKSPACE  &nop
            >;

            display-name = "X NUM ALT RU";
        };

        layer_28 {
            bindings = <
  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans
                          &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
